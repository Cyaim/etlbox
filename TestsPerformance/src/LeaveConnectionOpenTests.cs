using ALE.ETLBox;
using ALE.ETLBox.ConnectionManager;
using ALE.ETLBox.ControlFlow;
using ALE.ETLBox.DataFlow;
using ALE.ETLBox.Helper;
using ALE.ETLBox.Logging;
using Newtonsoft.Json.Linq;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Text;
using Xunit;

namespace ALE.ETLBoxTests.BigData
{
    [Collection("Performance")]
    public class LeaveConnectionOpenTests
    {
        public string ConnectionStringParameter => Config.SqlConnection.RawConnectionString("BigData");


        public LeaveConnectionOpenTests(BigDataDatabaseFixture dbFixture)
        {

        }

        [Theory]
        [InlineData(true)]
        [InlineData(false)]
        public void TestLeaveOpenOnConnMan(bool leaveOpen)
        {
            //Arrange
            SqlConnectionManager con = new SqlConnectionManager(ConnectionStringParameter)
            {
                LeaveOpen = leaveOpen
            };

            //Act
            BigDataHelper.LogExecutionTime("Connection is left open: " + leaveOpen,
                () =>
                {
                    for (int i = 0; i < 100000; i++)
                        new SqlTask("Dummy", "WAITFOR DELAY '0:00:00.010'")
                        {
                            ConnectionManager = con,
                            DisableLogging = true
                        }
                        .ExecuteNonQuery();
                });

            //Assert


        }
    }
}
