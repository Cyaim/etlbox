<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <Configurations>Debug;Release</Configurations>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Description>A lightweight ETL (extract, transform, load) library and data integration toolbox for .NET. Source and destination components let you read and write data from the most common databases and file types. Transformations allow you to you harmonize, filter, aggregate, validate and clean your data.</Description>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <Copyright>Andreas Lennartz</Copyright>
        <PackageLicenseUrl></PackageLicenseUrl>
        <PackageProjectUrl>https://www.etlbox.net</PackageProjectUrl>
        <RepositoryUrl>https://github.com/roadrunnerlenny/etlbox</RepositoryUrl>
        <PackageTags>ETL .NET dataflow ssis database integration</PackageTags>
        <PackageReleaseNotes>What's new in 2.1? The whole linking, task and exception handling of data flow components was improved. Also the whole interface of the data flow and control flow classes has been refined. As these changes are mostly hidden, it was necessary to prepare the new features that will be introduced with 2.1.x and later versions.

Version 2.1.2 include a new transformation: ColumnRename, which allows you to easily rename column or properties in your flow. The ComparisonFunc on the MergeJoin is now working properly. Improved performance for Odbc/OleDb connections by reducing default BatchSize to 100. CreateViewTask now has ViewAttributes. 
</PackageReleaseNotes>
        <Version>2.1.2</Version>
        <PackageIconUrl></PackageIconUrl>
        <PackageIcon>logo_bw.png</PackageIcon>
        <Authors>Andreas Lennartz</Authors>
        <Company>ETLBox Office</Company>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <RootNamespace>ETLBox</RootNamespace>
        <Product>ETLBox</Product>
        <PackageId>ETLBox</PackageId>
        <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <DebugType>none</DebugType>
        <DebugSymbols>false</DebugSymbols>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
        <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
        <PackageReference Include="NLog.Extensions.Logging" Version="1.6.4" />
        <PackageReference Include="System.Data.Common" Version="4.3.0" />
        <PackageReference Include="System.Threading.Tasks.Dataflow" Version="4.11.1" />
        <PackageReference Include="TSQL.Parser" Version="1.5.2" />
    </ItemGroup>

    <ItemGroup>
        <None Include="img\logo_bw.png" Pack="true" PackagePath="">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
        <ItemGroup>
            <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
        </ItemGroup>
    </Target>

</Project>
