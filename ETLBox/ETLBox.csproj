<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <Configurations>Debug;Release</Configurations>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Description>A lightweight ETL (extract, transform, load) library and data integration toolbox for .NET. Source and destination components let you read and write data from the most common databases and file types. Transformations allow you to you harmonize, filter, aggregate, validate and clean your data.</Description>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <Copyright>Andreas Lennartz</Copyright>
        <PackageLicenseUrl></PackageLicenseUrl>
        <PackageProjectUrl>https://www.etlbox.net</PackageProjectUrl>
        <RepositoryUrl>https://github.com/roadrunnerlenny/etlbox</RepositoryUrl>
        <PackageTags>ETL .NET dataflow ssis database integration</PackageTags>
        <PackageReleaseNotes>What's new in 2.1.X? The whole linking, task and exception handling of data flow components was improved. Also the whole interface of the data flow and control flow classes has been refined. As these changes are mostly hidden, it was necessary to prepare the new features that will be introduced with 2.1.x and later versions.

Version 2.1.3 offers smaller improvements and bugfixes: In CustomSource, the ReadCompletedFunc was changed to ReadingCompleted and is now a Predicate&lt;T&gt;. The Aggregation now accepts a list of AggregateColumns/GroupColumns objects, which also works with ExpandoObjects. ColumnRename now takes a list of ColumnMap objects instead a string list. Also, ColumnRename now has a RemoveColumns property where property names can be added that are supposed to be removed. DbDestination now accepts a list of ColumnMap objects to map property names to column names - this also works with dynamic objects. The Aggregation now comes with First/LastValue aggregation methods. The DbMerge now has a fix for handling multiple id columns and possible key collision, and also can now handle null values in the Id columns.</PackageReleaseNotes>
        <Version>2.1.3</Version>
        <PackageIconUrl></PackageIconUrl>
        <PackageIcon>logo_bw.png</PackageIcon>
        <Authors>Andreas Lennartz</Authors>
        <Company>ETLBox Office</Company>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <RootNamespace>ETLBox</RootNamespace>
        <Product>ETLBox</Product>
        <PackageId>ETLBox</PackageId>
        <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <DebugType>none</DebugType>
        <DebugSymbols>false</DebugSymbols>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
        <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
        <PackageReference Include="NLog.Extensions.Logging" Version="1.6.4" />
        <PackageReference Include="System.Data.Common" Version="4.3.0" />
        <PackageReference Include="System.Threading.Tasks.Dataflow" Version="4.11.1" />
        <PackageReference Include="TSQL.Parser" Version="1.5.2" />
    </ItemGroup>

    <ItemGroup>
        <None Include="img\logo_bw.png" Pack="true" PackagePath="">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
        <ItemGroup>
            <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
        </ItemGroup>
    </Target>

</Project>
